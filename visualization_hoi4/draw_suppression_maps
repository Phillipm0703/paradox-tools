#!/usr/bin/env ruby

require "RMagick"
require_relative "../lib/paradox"
require_relative "game_map"
require "pry"

class DrawSuppressionMap < ParadoxGame
  include GameMap

  def victory_point_color_map
    vp_color = Hash.new do |ht,k|
      ht[k] = [rand(256), rand(256), rand(256)]
    end

    Hash[
      province_definitions.map do |province_id, (color, land_sea)|
        state_id = province_ids_to_states[province_id]
        if state_id
          new_color = vp_color[state_to_vp_total[state_id]]
        elsif land_sea == "land"
          new_color = [107, 66, 38]
        else
          new_color = [0, 0, 80]
        end
        [color, new_color.pack("C*")]
      end
    ]
  end

  def run!
    pixels = generate_map_image_pixels(victory_point_color_map)
    add_state_borders(pixels)
    pixels_to_img(pixels).write("victory_points.png")
  end
end

DrawSuppressionMap.new(*ARGV).run!
