#!/usr/bin/env ruby

require_relative "../lib/paradox"

class ListFormableCountries < ParadoxGame
  def each_change_tag(node, &blk)
    return unless node.is_a?(PropertyList)
    node.each do |key, val|
      if key == "change_tag"
        yield val
      end
      each_change_tag(val, &blk)
    end
  end
  
  def formable_countries
    tags = Set[]
    glob("{events,decisions}/*.txt").each do |path|
      begin
        node = parse(path)
      rescue
        warn "#{path}: #{$!}"
        next
      end
      each_change_tag(node) do |tag|
        tags << tag
      end
    end
    tags
  end

  def call
    puts formable_countries.map{|tag| "#{tag} #{localization(tag)}"}
  end
end

ListFormableCountries.new(*ARGV).call
