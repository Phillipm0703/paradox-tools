#!/usr/bin/env ruby


require_relative "../lib/paradox_game"
require_relative "eu4_save"

class IdeaGroups < ParadoxGame
  def initialize(save_game, *roots)
    super(*roots)
    @save = EU4Save.new(save_game)
  end

  def valid_ideas
    %W[
      administrative_ideas
      aristocracy_ideas
      defensive_ideas
      diplomatic_ideas
      economic_ideas
      expansion_ideas
      exploration_ideas
      humanist_ideas
      influence_ideas
      innovativeness_ideas
      maritime_ideas
      naval_ideas
      offensive_ideas
      plutocracy_ideas
      quality_ideas
      quantity_ideas
      religious_ideas
      spy_ideas
      trade_ideas
    ]
  end

  def idea_name(name)
    localization(name).sub(/ Ideas\z/, "")
  end

  def call
    @save.countries.each do |tag, country|
      country
        .idea_groups
        .select{|idea, count| valid_ideas.include?(idea) }
        .each_with_index do |(idea, count), index|
          # This also includes idea groups with 0 unlocked ideas
          puts [country.name || localization(tag), index+1, idea_name(idea)].join("\t")
        end
    end
  end
end

IdeaGroups.new(*ARGV).call
