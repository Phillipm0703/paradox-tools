#!/usr/bin/env ruby

require_relative "../lib/paradox_game"
require_relative "eu4_save"

class AnalyzeTrade < ParadoxGame
  def country_name(tag)
    @save.countries[tag]&.name || localization(tag)
  end

  def initialize(save_game, *roots)
    super(*roots)
    @save = EU4Save.new(save_game)
  end

  def print_node_info(node_name, node)
    node
      .total_collector_share
      .map{|tag, share| [country_name(tag), share]}
      .sort_by{|name, share| [-share, name]}
      .each do |name, share|
        puts "#{localization(node_name)} - #{name} - #{"%.6f" % share}"
      end
    puts ""
  end

  def call
    @save.trade_network.nodes.each do |name, node|
      print_node_info(name, node)
    end
  end
end

unless ARGV.size >= 2
  STDERR.puts "Usage: #{$0} <save.eu4> <root> [<mod1> <mod2> ... ] # non-compressed save only"
  exit 1
end

AnalyzeTrade.new(*ARGV).call
