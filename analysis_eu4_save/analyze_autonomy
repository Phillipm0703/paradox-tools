#!/usr/bin/env ruby

require_relative "./eu4_save_analysis"

class AnalyzeAutonomy < EU4SaveAnalysis
  def call
    countries = {}
    @save.provinces.each do |id, province|
      next unless province.owner and province.development
      countries[province.owner] ||= []
      countries[province.owner] << [province.development, province.effective_autonomy]
    end

    countries.map do |tag, data|
      max_dev = data.map{|dev,_| dev}.sum
      lost_dev = data.map{|dev,a| dev*(a/100.0) }.sum
      avg_autonomy = 100.0 * lost_dev / max_dev
      [country_name(tag), avg_autonomy.round(2)]
    end.sort.each do |name, avg_autonomy|
      puts "#{name}\t#{avg_autonomy}"
    end
  end
end

if $0 == __FILE__
  AnalyzeAutonomy.new_from_argv.call
end
