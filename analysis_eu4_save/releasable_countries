#!/usr/bin/env ruby

require_relative "./eu4_save_analysis"

class ReleasableCountries < EU4SaveAnalysis
  def foreign_cores
    @foreign_cores ||= begin
      map = {}
      @save.provinces.each do |id, province|
        cores = province.cores
        owner = province.owner
        cores.each do |core|
          next if core == owner
          map[core] ||= Hash.new(0)
          map[core][owner] += 1
        end
      end
      map
    end
  end

  def country_size(tag)
    @save.countries[tag].num_of_cities
  end

  def call
    foreign_cores.each do |country, foreigners|
      next if country_size(country) > 0
      with_counts = foreigners.map{|tag,count|
        "#{country_name(tag)} (#{count})"
      }.join(", ")
      puts "#{country_name(country)}: #{ with_counts }"
    end
  end
end

if $0 == __FILE__
  ReleasableCountries.new_from_argv.call
end
