#!/usr/bin/env ruby

require_relative "./eu4_save_analysis"

class ReligionsByCountry < EU4SaveAnalysis
  def religions_by_country
    @religions_by_country ||= begin
      totals = {}
      @save.provinces.each do |id, province|
        next unless province.city?
        next unless province.owner
        if province.development == 0
          # warn "Zero development province #{province.id} #{province.name}"
          next
        end
        totals[province.owner] ||= Hash.new(0)
        totals[province.owner][province.religion] += province.development
      end
      totals
    end
  end

  def same_religion_group?(a, b)
    religion_to_religion_group[a] == religion_to_religion_group[b]
  end

  def religion_status(tag, religion)
    country = @save.countries[tag]
    return nil if religion == country.religion
    if same_religion_group?(religion, country.religion)
      "heretics"
    else
      "heathens"
    end
  end

  def call
    country_sizes.sort_by(&:last).reverse.each do |tag, size|
      puts "#{country_name(tag)}:"
      religions = religions_by_country[tag]
      religions.sort_by(&:last).reverse.each do |religion_name, dev|
        status = religion_status(tag, religion_name)
        status = " [#{status}]" if status
        puts "* #{localization(religion_name)}#{status} - #{dev.round}"
      end
      puts ""
    end
  end
end

if $0 == __FILE__
  ReligionsByCountry.new_from_argv.call
end
