#!/usr/bin/env ruby

require "tempfile"
require "pathname"
require "set"
require "yaml"

require_relative "../lib/paradox_mod_file_serializer"
require_relative "../lib/paradox_mod_file"

class DiffParadox
  def initialize(a, b, diff_options, normalize)
    @a = Pathname(a)
    @b = Pathname(b)
    @diff_options = diff_options
    @diff_options = ["-w", "-U3"] if @diff_options.empty?
    @normalize = normalize
  end
  def files_in_a
    @files_in_a ||= Set[*@a.find.select(&:file?).map{|f| Pathname(f.relative_path_from(@a).to_s.downcase)}]
  end
  def files_in_b
    @files_in_b ||= Set[*@b.find.select(&:file?).map{|f| Pathname(f.relative_path_from(@b).to_s.downcase)}]
  end
  def only_in_a
    files_in_a - files_in_b
  end
  def only_in_b
    files_in_b - files_in_a
  end
  def files_in_both
    files_in_a & files_in_b
  end
  def diff_command!(path1, path2)
    system("diff", *@diff_options, path1.to_s, path2.to_s)
  end
  def diff_serialized!(mod1, path1, mod2, path2)
    mod1out = ParadoxModFileSerializer.serialize(mod1)
    mod2out = ParadoxModFileSerializer.serialize(mod2)
    f1 = Tempfile.new(File.basename(path1))
    f1.write(mod1out)
    f1.close

    f2 = Tempfile.new(File.basename(path2))
    f2.write(mod2out)
    f2.close

    diff_command!(f1.path, f2.path)

    f1.unlink
    f2.unlink
  end
  def diff_paradox!(path1, path2)
    mod1 = ParadoxModFile.new(path: path1).parse!
    mod2 = ParadoxModFile.new(path: path2).parse!
    return if mod1 == mod2 # OK
    if @normalize
      mod1 = mod1.normalize
      mod2 = mod2.normalize
      return if mod1 == mod2 # OK enough
    end
    diff_serialized!(mod1, path1, mod2, path2)
  end
  def diff_yaml!(path1, path2)
    data1 = YAML.load(path1.read.gsub("\ufeff", ""))
    data2 = YAML.load(path2.read.gsub("\ufeff", ""))
    if data1 == data2
      # OK
    else
      require 'pry'; binding.pry
      diff_command!(path1, path2)
    end
  end
  def diff_file!(path1, path2)
    case path1.extname
    when ".txt", ".mod", ".gfx", ".gui"
      diff_paradox! path1, path2
    when ".yml"
      diff_yaml! path1, path2
    else
      diff_command! path1, path2
    end
  end
  def run!
    if @a.directory? and @b.directory?
      files_in_both.each do |path|
        diff_file!(@a + path, @b + path)
      end
      only_in_a.each do |path|
        puts "Only in #{@a}: #{path}"
      end
      only_in_b.each do |path|
        puts "Only in #{@b}: #{path}"
      end
    else
      diff_file!(@a, @b)
    end
  end
end

unless ARGV.size >= 2
  STDERR.puts "Usage: #{$0} [--normalize] [--diff-options] <path1.txt> <path2.txt>"
  STDERR.puts "--normalize ignores order within Paradox mod files, which is not always correct"
  STDERR.puts "Diff options default to -w -U3 unless explicitly given."
  exit 1
end

*diff_options, path1, path2 = *ARGV
normalize = !!diff_options.delete("--normalize")

dp = DiffParadox.new(path1, path2, diff_options, normalize).run!
