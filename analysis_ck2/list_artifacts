#!/usr/bin/env ruby

require_relative "../ck2/ck2_analyses"

class ListArtifactsAnalysis < CK2GameAndSaveAnalysis
  def artifact_types
    @artifact_types ||= begin
      map = {}
      glob("common/artifacts/*.txt").each do |path|
        parse(path).each do |id, artifact|
          next if id == "slots"
          name = localization(id)
          if id =~ /\Amagnum_opus_.*_(\d+)\z/
            name += " #{$1}"
          end
          map[id] = {
            name: name,
            quality: artifact["quality"] || "?",
          }
        end
      end
      map
    end
  end

  def artifact_owners
    @artifact_owners ||= begin
      map = {}
      @data["artifacts"].each do |artifact_id, artifact|
        # No idea wtf this is about
        next if artifact == "none"
        name = artifact["type"]
        owner_id = artifact["owner"]
        raise "Artifact with no name: #{artifact}" unless name
        raise "Artifact with no owner: #{artifact}" unless owner_id
        item = artifact_types[name]
        raise "No such item: #{name}" unless item
        quality = item[:quality]
        # Don't bother with crap
        # Strange chest has no quality
        next if quality == 1 or quality == 2
        map[owner_id] ||= []
        map[owner_id] << name
      end
      map
    end
  end

  def run!
    load_characters!
    artifact_owners.each do |owner_id, items|
      owner = Character[owner_id]
      puts "#{owner.full_name} of #{owner.top_tier_titles.join("/")}"
      items.sort.each do |id|
        item = artifact_types[id]
        puts "* #{item[:name]} [#{item[:quality]}]"
      end
    end
  end
end

ListArtifactsAnalysis.new(*ARGV).run!
