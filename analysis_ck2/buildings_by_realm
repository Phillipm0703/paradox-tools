#!/usr/bin/env ruby

require_relative "../lib/paradox"
require "set"
require "pry"

class BuildingsAnalysis
  def initialize(path)
    @path = path
    @data = ParadoxModFile.new(path: @path).parse!
  end

  def valid_titles
    @valid_titles ||= Set[*@data["title"].keys]
  end

  def top_realm_by_title(title)
    title_data = @data["title"][title]
    raise "No such title `#{title}'" unless title_data
    if title_data["liege"]
      top_realm_by_title(title_data["liege"]["title"])
    else
      title
    end
  end

  def add(realm, type, building)
    @by_realm[realm] ||= {}
    @by_realm[realm][type] ||= Hash.new(0)
    @by_realm[realm][type][building] += 1
  end

  def add_holding(realm, type, buildings)
    add realm, type, "total"
    buildings.each do |b|
      add realm, type, b
    end
  end

  def run!
    @by_realm = {}

    @data["provinces"].each do |id, province|
      next if province == []
      holding_names = valid_titles & province.keys
      next if holding_names.empty?
      primary =  province["primary_settlement"]

      if primary == "---"
        realm = "---"
      else
        realm = top_realm_by_title(primary)
      end

      hospital = province["hospital"]
      if hospital
        hospital_buildings = hospital.keys.select{|k| hospital[k] == true}
        add_holding realm, "hospital", hospital_buildings
      end

      holding_names.each do |name|
        holding = province[name]
        type = holding["type"]
        buildings = holding.keys.select{|k| holding[k] == true}
        buildings -= %W[maintaining_mercenaries]
        realm = top_realm_by_title(name)
        add_holding realm, type, buildings
      end
    end

    @by_realm.each do |realm, by_type|
      puts "#{realm}"
      by_type.each do |type, stats|
        puts "  #{type}:"
        stats.sort_by(&:last).each do |b, n|
          puts "  * #{b} - #{n}"
        end
      end
      puts ""
    end
  end
end

unless ARGV.size == 1
  STDERR.puts "Usage: #{$0} <save.ck2> # non-compressed save only"
  exit 1
end

BuildingsAnalysis.new(ARGV[0]).run!
