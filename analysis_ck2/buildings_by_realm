#!/usr/bin/env ruby

require_relative "ck2_analyses"

class BuildingsAnalysis < CK2GameAndSaveAnalysis
  def add(realm, type, building)
    @by_realm[realm] ||= {}
    @by_realm[realm][type] ||= Hash.new(0)
    @by_realm[realm][type][building] += 1
  end

  def add_holding(realm, type, buildings)
    add realm, type, "total"
    buildings.each do |b|
      add realm, type, b
    end
  end

  def run!
    @by_realm = {}

    @data["provinces"].each do |id, province|
      province_title = province_id_to_title[id]
      next unless province_title
      realm = top_realm_by_title(province_title)
      holding_names = valid_titles & province.keys

      hospital = province["hospital"]
      if hospital
        hospital_buildings = hospital.keys.select{|k| hospital[k] == true}
        add_holding realm, "hospital", hospital_buildings
      end

      holding_names.each do |name|
        holding = province[name]
        type = holding["type"]
        buildings = holding.keys.select{|k| holding[k] == true}
        buildings -= %W[maintaining_mercenaries]
        realm = top_realm_by_title(name)
        add_holding realm, type, buildings
      end
    end

    @by_realm.each do |realm, by_type|
      puts "#{realm_name(realm)}"
      by_type.each do |type, stats|
        puts "  #{type}:"
        stats.sort_by(&:last).each do |b, n|
          puts "  * #{b} - #{n}"
        end
      end
      puts ""
    end
  end
end

BuildingsAnalysis.new(*ARGV).run!
