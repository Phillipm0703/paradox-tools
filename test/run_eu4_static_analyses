#!/usr/bin/env ruby

require "shellwords"
require "pathname"

unless ARGV.size >= 2
  STDERR.puts "Usage: #{$0} outputdir gamepath [mod1] [mod2...]"
  exit 1
end

output = Pathname(ARGV[0])
game = ARGV[1]
mods = ARGV[2..-1]

# analysis_eu4/analyze_missions is known to only work up to 1.24
list = %Q[
  analysis_eu4/analyze_custom_idea_bonuses $g
  analysis_eu4/analyze_custom_ideas $g
  analysis_eu4/analyze_idea_groups $g
  analysis_eu4/analyze_missions_countries $g
  analysis_eu4/analyze_policies $g
  analysis_eu4/analyze_static_modifiers $g
  analysis_eu4/analyze_unit_pips $g
  analysis_eu4/average_province $g
  analysis_eu4/countries_by_date $g
  analysis_eu4/country_cultures $g
  analysis_eu4/find_cots_in_converted_campaign $g
  analysis_eu4/list_converter_province_value $g
  analysis_eu4/list_formable_countries $g
  analysis_eu4/validate_trade_nodes $g
  analysis_eu4/who_can_form_what $g
].lines.grep(/\S/).map(&:chomp).map(&:strip)

root_dir = Pathname(__dir__).parent

g_str = [game, *mods].map(&:shellescape).join(" ")

output.mkpath
list.each do |cmd|
  name = cmd.split.first.split("/").last
  save_to = output + "#{name}.txt"
  cmd = cmd.sub("$g", g_str) + " >#{save_to.to_s.shellescape}"
  if save_to.exist?
    # puts "#{name} already exists"
  else
    puts "Running #{name}"
    puts cmd
    system "#{root_dir}/#{cmd}"
    puts ""
  end
end
